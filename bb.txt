盒子模型：
 盒子模型的大小的计算公式：
 宽：内容大小+左边框+右边框+左右内填充

内外边距：
   外边距：margin-
    left:左外边距
    right:右外边距
    top:上外边距
    bottom:下外边距
   内边距（内填充）：padding-
    left:左内边距
    right:右内边距
    top:上内边距
    bottom:下内边距

7.22
   C C++ Java C# GO 易 python...    
    C++：游戏、快速处理、高效  
    C：嵌入式硬件设备 
    java：网站、大数据、安卓、  
    C#：  
    易：中文编程、外挂、脚本
    python：语法简单、人工智能    爬虫技术
    python 编程入门 语法  程序思维 3天   github 2天  项目管理软件  必用 milims
程序的生命周期：
    编写-编译-运行-销毁
         
Python    
    解释型语言 开发过程中没有编译环节    
    交互式语言 
    面向对象语言（对象贴近生活） 
    初学者的语言

打开Python交互提示框

    win+r 输入cmd 黑框输入python
python
    标识符，字母、数字、下划线组成，不能以数字作为开头，标识符区分大小写，标识符不能使用关键字
    tab 默认4个空格
    注释#开头  程序不会运行和翻译 
    空行代表分隔    

    Python
    语法：
        输出：
            print（“内容”）
                让计算机输出一段内容到屏幕
        输入：
            input（）
                从键盘输入数据到计算机 
        变量（容器）：一般编程分定义变量 变量赋值  对python来说赋值即定义
            存放数据的容器
                变量名=值  a=1
    
 7.23
 python
    条件语句
    条件分支结构 
    单分支结构
       if 
       条件满足所执行的代码   
    双分支结构
       if 
       条件满足所执行的代码
       else
       条件不满足所执行的代码
    多分支结构
       if  条件1
       条件1满足所执行的代码
       elif 条件2
       条件1不满足的情况下，满足条件2所执行的代码
       elif 条件3
       elif 条件4
       elif 条件5
       ...
       else:
       上面所有条件都不符的的情况下所执行的代码
    布尔类型：true false   
    数据类型：
       整数
           int   long
       小数
           float  
       字符串  加引号   
           str
    复数 
    强制类型转换：
        要转换的类型（被转换的数据）
进制：
    二进制 0b10  代表2
    十进制 10   代表10
    十六进制 0x10   代表16

列表List用[]表示
    定义方式a=[1,1.2,"fg"]
字符串：
    str
        取到字符串的某几个
        下标从0开始
        s="abcd"
        s[0]取到某一个
        s[0:2]取到某几个，能开头不能结尾
        s[2:]某个到结尾
        取字符串 从左到右0123，从右到左-1-2-3
随机数：
    1.导入随机数包
        import random
    2.调用random.randint()方法
    3.randint(产生随机数的范围)
控制台运行代码
    win+r
    输入cmd
    cd desktop
7.24
循环：
    while 条件:
        条件满足执行代码
    break:立马终止循环
    continue:立马终止本次循环

python关键字
False,None,True,and,as,assert,break,clsss,continue,def,del,elif,else,except,finally,for,from,global,if,import,in,is,lambda,nonlocal,not,or,pass,raise,return,try,while,with,yield


7.25  Git软件
什么是Git
  分布式版本控制系统
  linux系统 linus提出
  分布式和集中式
Git安装：
  下一步
    设置自己的名字和邮箱
        $ git config --global user.name "YL"
        $ git config --global user.email "502262332@qq.com"
创建版本库
  创建一个空目录，作为版本库
  初始化版本库
    1.进入版本库所在的目录里
    2.执行初始化命令
        git init
      管理文本、代码、网页 .txt .c .java .html，
      不能管理视频、图片
  把文件添加到版本库
    1.创建一个文件
    2.在仓库里面查看状态 红色工作区 绿色暂存区 没有在master里
      git status
    3.把文件添加到版本库
      git add 文件名
    4.把文件提交给版本库
      git commit -m "信息"
    5.查看文件每个版本
      git log
  时光穿梭
    回到以前的版本
      git reset --hard 版本

      版本：
        HEAD:当前版本
        HEAD^:代表上一个版本
        HEA~100:代表上100个版本
      git reflog:查看历史所有版本的信息
      git reset --hard 版本号
  修改撤销：
    git checkout -- 文件名    对未提交到master的文件进行覆盖修改

  场景：
      1.在未提交前撤销修改  
        git checkout -- 文件名
      2.文件提交至暂存区撤销修改  
        清除暂存区的文件 git reset HEAD 文件名
        替换工作区文件 git checkout -- 文件名
      3.文件提交至master后撤销修改
        版本回退 git reset --hard HEAD^
  删除文件
    不想删除
      git checkout -- 文件名
    想删除  
      1.删除源文件
      2.添加暂存区  git add 文件名
      3.提交  git commit -m ""
      4.还可以回退
+---[RSA 2048]----+
|oO=++=o..        |
|o+@=*+oo .       |
|.o+B+B= =        |
|  E.=. O .       |
|   o. o S        |
|    .o           |
|o . ..           |
|.o...            |
| ...             |
+----[SHA256]-----+


bootstrop
sublime
  将本机的SSH添加到github官网
    1.在本地创建SSH key
      ssh-keygen -t rsa -C "email"
    2.找到SSH key所在的地方
      C:/用户/web/.ssh
    3.复制.ssh/id_rsa.pub的内容到GitHub中
    4.测试是否能够连接成功
    ssh -T git@github.com
把本地仓库上传到远程GitHub
    1.远程仓库连接
      git remote add origin git@github.com:YuLi1995/git1.git
    2.把本地仓库推送到远程
      git push -u origin master
      





java关键字
 abstract
 asscrt
 boolean
 break
 byte
 case
 catch
 char
 class
 const
 continue
 default
 do
 double
 else
 enum
 extends
 final
 finally
 float
 for
 goto
 if
 implements
 import
 instanceof
 int
 interface
 long
 native
 new
 package
 private
 protected
 public
 return
 short
 static
 strictfp
 super
 switch
 synchronized
 this
 throw
 throws
 transient
 try
 void
 volatile
 while
